                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.8.0 #10562 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module udpModule
                                      6 	.optsdcc -mmcs51 --model-small
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _main
                                     12 	.globl _WizNet_init
                                     13 	.globl _SPI_read
                                     14 	.globl _SPI_write
                                     15 	.globl _SPI_init
                                     16 	.globl _TF2
                                     17 	.globl _EXF2
                                     18 	.globl _RCLK
                                     19 	.globl _TCLK
                                     20 	.globl _EXEN2
                                     21 	.globl _TR2
                                     22 	.globl _C_T2
                                     23 	.globl _CP_RL2
                                     24 	.globl _T2CON_7
                                     25 	.globl _T2CON_6
                                     26 	.globl _T2CON_5
                                     27 	.globl _T2CON_4
                                     28 	.globl _T2CON_3
                                     29 	.globl _T2CON_2
                                     30 	.globl _T2CON_1
                                     31 	.globl _T2CON_0
                                     32 	.globl _PT2
                                     33 	.globl _ET2
                                     34 	.globl _CY
                                     35 	.globl _AC
                                     36 	.globl _F0
                                     37 	.globl _RS1
                                     38 	.globl _RS0
                                     39 	.globl _OV
                                     40 	.globl _F1
                                     41 	.globl _P
                                     42 	.globl _PS
                                     43 	.globl _PT1
                                     44 	.globl _PX1
                                     45 	.globl _PT0
                                     46 	.globl _PX0
                                     47 	.globl _RD
                                     48 	.globl _WR
                                     49 	.globl _T1
                                     50 	.globl _T0
                                     51 	.globl _INT1
                                     52 	.globl _INT0
                                     53 	.globl _TXD
                                     54 	.globl _RXD
                                     55 	.globl _P3_7
                                     56 	.globl _P3_6
                                     57 	.globl _P3_5
                                     58 	.globl _P3_4
                                     59 	.globl _P3_3
                                     60 	.globl _P3_2
                                     61 	.globl _P3_1
                                     62 	.globl _P3_0
                                     63 	.globl _EA
                                     64 	.globl _ES
                                     65 	.globl _ET1
                                     66 	.globl _EX1
                                     67 	.globl _ET0
                                     68 	.globl _EX0
                                     69 	.globl _P2_7
                                     70 	.globl _P2_6
                                     71 	.globl _P2_5
                                     72 	.globl _P2_4
                                     73 	.globl _P2_3
                                     74 	.globl _P2_2
                                     75 	.globl _P2_1
                                     76 	.globl _P2_0
                                     77 	.globl _SM0
                                     78 	.globl _SM1
                                     79 	.globl _SM2
                                     80 	.globl _REN
                                     81 	.globl _TB8
                                     82 	.globl _RB8
                                     83 	.globl _TI
                                     84 	.globl _RI
                                     85 	.globl _P1_7
                                     86 	.globl _P1_6
                                     87 	.globl _P1_5
                                     88 	.globl _P1_4
                                     89 	.globl _P1_3
                                     90 	.globl _P1_2
                                     91 	.globl _P1_1
                                     92 	.globl _P1_0
                                     93 	.globl _TF1
                                     94 	.globl _TR1
                                     95 	.globl _TF0
                                     96 	.globl _TR0
                                     97 	.globl _IE1
                                     98 	.globl _IT1
                                     99 	.globl _IE0
                                    100 	.globl _IT0
                                    101 	.globl _P0_7
                                    102 	.globl _P0_6
                                    103 	.globl _P0_5
                                    104 	.globl _P0_4
                                    105 	.globl _P0_3
                                    106 	.globl _P0_2
                                    107 	.globl _P0_1
                                    108 	.globl _P0_0
                                    109 	.globl _TH2
                                    110 	.globl _TL2
                                    111 	.globl _RCAP2H
                                    112 	.globl _RCAP2L
                                    113 	.globl _T2CON
                                    114 	.globl _B
                                    115 	.globl _ACC
                                    116 	.globl _PSW
                                    117 	.globl _IP
                                    118 	.globl _P3
                                    119 	.globl _IE
                                    120 	.globl _P2
                                    121 	.globl _SBUF
                                    122 	.globl _SCON
                                    123 	.globl _P1
                                    124 	.globl _TH1
                                    125 	.globl _TH0
                                    126 	.globl _TL1
                                    127 	.globl _TL0
                                    128 	.globl _TMOD
                                    129 	.globl _TCON
                                    130 	.globl _PCON
                                    131 	.globl _DPH
                                    132 	.globl _DPL
                                    133 	.globl _SP
                                    134 	.globl _P0
                                    135 ;--------------------------------------------------------
                                    136 ; special function registers
                                    137 ;--------------------------------------------------------
                                    138 	.area RSEG    (ABS,DATA)
      000000                        139 	.org 0x0000
                           000080   140 _P0	=	0x0080
                           000081   141 _SP	=	0x0081
                           000082   142 _DPL	=	0x0082
                           000083   143 _DPH	=	0x0083
                           000087   144 _PCON	=	0x0087
                           000088   145 _TCON	=	0x0088
                           000089   146 _TMOD	=	0x0089
                           00008A   147 _TL0	=	0x008a
                           00008B   148 _TL1	=	0x008b
                           00008C   149 _TH0	=	0x008c
                           00008D   150 _TH1	=	0x008d
                           000090   151 _P1	=	0x0090
                           000098   152 _SCON	=	0x0098
                           000099   153 _SBUF	=	0x0099
                           0000A0   154 _P2	=	0x00a0
                           0000A8   155 _IE	=	0x00a8
                           0000B0   156 _P3	=	0x00b0
                           0000B8   157 _IP	=	0x00b8
                           0000D0   158 _PSW	=	0x00d0
                           0000E0   159 _ACC	=	0x00e0
                           0000F0   160 _B	=	0x00f0
                           0000C8   161 _T2CON	=	0x00c8
                           0000CA   162 _RCAP2L	=	0x00ca
                           0000CB   163 _RCAP2H	=	0x00cb
                           0000CC   164 _TL2	=	0x00cc
                           0000CD   165 _TH2	=	0x00cd
                                    166 ;--------------------------------------------------------
                                    167 ; special function bits
                                    168 ;--------------------------------------------------------
                                    169 	.area RSEG    (ABS,DATA)
      000000                        170 	.org 0x0000
                           000080   171 _P0_0	=	0x0080
                           000081   172 _P0_1	=	0x0081
                           000082   173 _P0_2	=	0x0082
                           000083   174 _P0_3	=	0x0083
                           000084   175 _P0_4	=	0x0084
                           000085   176 _P0_5	=	0x0085
                           000086   177 _P0_6	=	0x0086
                           000087   178 _P0_7	=	0x0087
                           000088   179 _IT0	=	0x0088
                           000089   180 _IE0	=	0x0089
                           00008A   181 _IT1	=	0x008a
                           00008B   182 _IE1	=	0x008b
                           00008C   183 _TR0	=	0x008c
                           00008D   184 _TF0	=	0x008d
                           00008E   185 _TR1	=	0x008e
                           00008F   186 _TF1	=	0x008f
                           000090   187 _P1_0	=	0x0090
                           000091   188 _P1_1	=	0x0091
                           000092   189 _P1_2	=	0x0092
                           000093   190 _P1_3	=	0x0093
                           000094   191 _P1_4	=	0x0094
                           000095   192 _P1_5	=	0x0095
                           000096   193 _P1_6	=	0x0096
                           000097   194 _P1_7	=	0x0097
                           000098   195 _RI	=	0x0098
                           000099   196 _TI	=	0x0099
                           00009A   197 _RB8	=	0x009a
                           00009B   198 _TB8	=	0x009b
                           00009C   199 _REN	=	0x009c
                           00009D   200 _SM2	=	0x009d
                           00009E   201 _SM1	=	0x009e
                           00009F   202 _SM0	=	0x009f
                           0000A0   203 _P2_0	=	0x00a0
                           0000A1   204 _P2_1	=	0x00a1
                           0000A2   205 _P2_2	=	0x00a2
                           0000A3   206 _P2_3	=	0x00a3
                           0000A4   207 _P2_4	=	0x00a4
                           0000A5   208 _P2_5	=	0x00a5
                           0000A6   209 _P2_6	=	0x00a6
                           0000A7   210 _P2_7	=	0x00a7
                           0000A8   211 _EX0	=	0x00a8
                           0000A9   212 _ET0	=	0x00a9
                           0000AA   213 _EX1	=	0x00aa
                           0000AB   214 _ET1	=	0x00ab
                           0000AC   215 _ES	=	0x00ac
                           0000AF   216 _EA	=	0x00af
                           0000B0   217 _P3_0	=	0x00b0
                           0000B1   218 _P3_1	=	0x00b1
                           0000B2   219 _P3_2	=	0x00b2
                           0000B3   220 _P3_3	=	0x00b3
                           0000B4   221 _P3_4	=	0x00b4
                           0000B5   222 _P3_5	=	0x00b5
                           0000B6   223 _P3_6	=	0x00b6
                           0000B7   224 _P3_7	=	0x00b7
                           0000B0   225 _RXD	=	0x00b0
                           0000B1   226 _TXD	=	0x00b1
                           0000B2   227 _INT0	=	0x00b2
                           0000B3   228 _INT1	=	0x00b3
                           0000B4   229 _T0	=	0x00b4
                           0000B5   230 _T1	=	0x00b5
                           0000B6   231 _WR	=	0x00b6
                           0000B7   232 _RD	=	0x00b7
                           0000B8   233 _PX0	=	0x00b8
                           0000B9   234 _PT0	=	0x00b9
                           0000BA   235 _PX1	=	0x00ba
                           0000BB   236 _PT1	=	0x00bb
                           0000BC   237 _PS	=	0x00bc
                           0000D0   238 _P	=	0x00d0
                           0000D1   239 _F1	=	0x00d1
                           0000D2   240 _OV	=	0x00d2
                           0000D3   241 _RS0	=	0x00d3
                           0000D4   242 _RS1	=	0x00d4
                           0000D5   243 _F0	=	0x00d5
                           0000D6   244 _AC	=	0x00d6
                           0000D7   245 _CY	=	0x00d7
                           0000AD   246 _ET2	=	0x00ad
                           0000BD   247 _PT2	=	0x00bd
                           0000C8   248 _T2CON_0	=	0x00c8
                           0000C9   249 _T2CON_1	=	0x00c9
                           0000CA   250 _T2CON_2	=	0x00ca
                           0000CB   251 _T2CON_3	=	0x00cb
                           0000CC   252 _T2CON_4	=	0x00cc
                           0000CD   253 _T2CON_5	=	0x00cd
                           0000CE   254 _T2CON_6	=	0x00ce
                           0000CF   255 _T2CON_7	=	0x00cf
                           0000C8   256 _CP_RL2	=	0x00c8
                           0000C9   257 _C_T2	=	0x00c9
                           0000CA   258 _TR2	=	0x00ca
                           0000CB   259 _EXEN2	=	0x00cb
                           0000CC   260 _TCLK	=	0x00cc
                           0000CD   261 _RCLK	=	0x00cd
                           0000CE   262 _EXF2	=	0x00ce
                           0000CF   263 _TF2	=	0x00cf
                                    264 ;--------------------------------------------------------
                                    265 ; overlayable register banks
                                    266 ;--------------------------------------------------------
                                    267 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                        268 	.ds 8
                                    269 ;--------------------------------------------------------
                                    270 ; internal ram data
                                    271 ;--------------------------------------------------------
                                    272 	.area DSEG    (DATA)
                                    273 ;--------------------------------------------------------
                                    274 ; overlayable items in internal ram 
                                    275 ;--------------------------------------------------------
                                    276 	.area	OSEG    (OVR,DATA)
                                    277 	.area	OSEG    (OVR,DATA)
                                    278 ;--------------------------------------------------------
                                    279 ; Stack segment in internal ram 
                                    280 ;--------------------------------------------------------
                                    281 	.area	SSEG
      000000                        282 __start__stack:
      000000                        283 	.ds	1
                                    284 
                                    285 ;--------------------------------------------------------
                                    286 ; indirectly addressable internal ram data
                                    287 ;--------------------------------------------------------
                                    288 	.area ISEG    (DATA)
                                    289 ;--------------------------------------------------------
                                    290 ; absolute internal ram data
                                    291 ;--------------------------------------------------------
                                    292 	.area IABS    (ABS,DATA)
                                    293 	.area IABS    (ABS,DATA)
                                    294 ;--------------------------------------------------------
                                    295 ; bit data
                                    296 ;--------------------------------------------------------
                                    297 	.area BSEG    (BIT)
                                    298 ;--------------------------------------------------------
                                    299 ; paged external ram data
                                    300 ;--------------------------------------------------------
                                    301 	.area PSEG    (PAG,XDATA)
                                    302 ;--------------------------------------------------------
                                    303 ; external ram data
                                    304 ;--------------------------------------------------------
                                    305 	.area XSEG    (XDATA)
                                    306 ;--------------------------------------------------------
                                    307 ; absolute external ram data
                                    308 ;--------------------------------------------------------
                                    309 	.area XABS    (ABS,XDATA)
                                    310 ;--------------------------------------------------------
                                    311 ; external initialized ram data
                                    312 ;--------------------------------------------------------
                                    313 	.area XISEG   (XDATA)
                                    314 	.area HOME    (CODE)
                                    315 	.area GSINIT0 (CODE)
                                    316 	.area GSINIT1 (CODE)
                                    317 	.area GSINIT2 (CODE)
                                    318 	.area GSINIT3 (CODE)
                                    319 	.area GSINIT4 (CODE)
                                    320 	.area GSINIT5 (CODE)
                                    321 	.area GSINIT  (CODE)
                                    322 	.area GSFINAL (CODE)
                                    323 	.area CSEG    (CODE)
                                    324 ;--------------------------------------------------------
                                    325 ; interrupt vector 
                                    326 ;--------------------------------------------------------
                                    327 	.area HOME    (CODE)
      000000                        328 __interrupt_vect:
      000000 02r00r00         [24]  329 	ljmp	__sdcc_gsinit_startup
                                    330 ;--------------------------------------------------------
                                    331 ; global & static initialisations
                                    332 ;--------------------------------------------------------
                                    333 	.area HOME    (CODE)
                                    334 	.area GSINIT  (CODE)
                                    335 	.area GSFINAL (CODE)
                                    336 	.area GSINIT  (CODE)
                                    337 	.globl __sdcc_gsinit_startup
                                    338 	.globl __sdcc_program_startup
                                    339 	.globl __start__stack
                                    340 	.globl __mcs51_genXINIT
                                    341 	.globl __mcs51_genXRAMCLEAR
                                    342 	.globl __mcs51_genRAMCLEAR
                                    343 	.area GSFINAL (CODE)
      000000 02r00r03         [24]  344 	ljmp	__sdcc_program_startup
                                    345 ;--------------------------------------------------------
                                    346 ; Home
                                    347 ;--------------------------------------------------------
                                    348 	.area HOME    (CODE)
                                    349 	.area HOME    (CODE)
      000003                        350 __sdcc_program_startup:
      000003 02r00r42         [24]  351 	ljmp	_main
                                    352 ;	return from main will return to caller
                                    353 ;--------------------------------------------------------
                                    354 ; code
                                    355 ;--------------------------------------------------------
                                    356 	.area CSEG    (CODE)
                                    357 ;------------------------------------------------------------
                                    358 ;Allocation info for local variables in function 'SPI_init'
                                    359 ;------------------------------------------------------------
                                    360 ;	udpModule.c:8: void SPI_init(void){
                                    361 ;	-----------------------------------------
                                    362 ;	 function SPI_init
                                    363 ;	-----------------------------------------
      000000                        364 _SPI_init:
                           000007   365 	ar7 = 0x07
                           000006   366 	ar6 = 0x06
                           000005   367 	ar5 = 0x05
                           000004   368 	ar4 = 0x04
                           000003   369 	ar3 = 0x03
                           000002   370 	ar2 = 0x02
                           000001   371 	ar1 = 0x01
                           000000   372 	ar0 = 0x00
                                    373 ;	udpModule.c:9: SCLK = 0;
                                    374 ;	assignBit
      000000 C2 93            [12]  375 	clr	_P1_3
                                    376 ;	udpModule.c:10: CS = 1;
                                    377 ;	assignBit
      000002 D2 90            [12]  378 	setb	_P1_0
                                    379 ;	udpModule.c:11: }
      000004 22               [24]  380 	ret
                                    381 ;------------------------------------------------------------
                                    382 ;Allocation info for local variables in function 'SPI_write'
                                    383 ;------------------------------------------------------------
                                    384 ;data                      Allocated to registers r7 
                                    385 ;i                         Allocated to registers r6 
                                    386 ;------------------------------------------------------------
                                    387 ;	udpModule.c:13: void SPI_write(unsigned char data){
                                    388 ;	-----------------------------------------
                                    389 ;	 function SPI_write
                                    390 ;	-----------------------------------------
      000005                        391 _SPI_write:
      000005 AF 82            [24]  392 	mov	r7,dpl
                                    393 ;	udpModule.c:15: for(i=0; i < 8; i++){
      000007 7E 00            [12]  394 	mov	r6,#0x00
      000009                        395 00102$:
                                    396 ;	udpModule.c:16: MOSI = (data & 0x80)>>7;
      000009 74 80            [12]  397 	mov	a,#0x80
      00000B 5F               [12]  398 	anl	a,r7
      00000C 23               [12]  399 	rl	a
      00000D 54 01            [12]  400 	anl	a,#0x01
                                    401 ;	assignBit
      00000F 24 FF            [12]  402 	add	a,#0xff
      000011 92 91            [24]  403 	mov	_P1_1,c
                                    404 ;	udpModule.c:17: SCLK = 1;
                                    405 ;	assignBit
      000013 D2 93            [12]  406 	setb	_P1_3
                                    407 ;	udpModule.c:18: SCLK = 0;
                                    408 ;	assignBit
      000015 C2 93            [12]  409 	clr	_P1_3
                                    410 ;	udpModule.c:19: data <<= 1;
      000017 8F 05            [24]  411 	mov	ar5,r7
      000019 ED               [12]  412 	mov	a,r5
      00001A 2D               [12]  413 	add	a,r5
      00001B FF               [12]  414 	mov	r7,a
                                    415 ;	udpModule.c:15: for(i=0; i < 8; i++){
      00001C 0E               [12]  416 	inc	r6
      00001D BE 08 00         [24]  417 	cjne	r6,#0x08,00111$
      000020                        418 00111$:
      000020 40 E7            [24]  419 	jc	00102$
                                    420 ;	udpModule.c:21: }
      000022 22               [24]  421 	ret
                                    422 ;------------------------------------------------------------
                                    423 ;Allocation info for local variables in function 'SPI_read'
                                    424 ;------------------------------------------------------------
                                    425 ;i                         Allocated to registers r6 
                                    426 ;data                      Allocated to registers r5 
                                    427 ;------------------------------------------------------------
                                    428 ;	udpModule.c:23: unsigned char SPI_read(void){
                                    429 ;	-----------------------------------------
                                    430 ;	 function SPI_read
                                    431 ;	-----------------------------------------
      000023                        432 _SPI_read:
                                    433 ;	udpModule.c:24: unsigned char i, data = 0;
      000023 7F 00            [12]  434 	mov	r7,#0x00
                                    435 ;	udpModule.c:26: for(i = 0; i < 8; i++){
      000025 7E 00            [12]  436 	mov	r6,#0x00
      000027                        437 00102$:
                                    438 ;	udpModule.c:27: SCLK = 1;
                                    439 ;	assignBit
      000027 D2 93            [12]  440 	setb	_P1_3
                                    441 ;	udpModule.c:28: data <<= 1;
      000029 8F 05            [24]  442 	mov	ar5,r7
      00002B ED               [12]  443 	mov	a,r5
      00002C 2D               [12]  444 	add	a,r5
      00002D FD               [12]  445 	mov	r5,a
                                    446 ;	udpModule.c:29: data |= MISO;
      00002E A2 92            [12]  447 	mov	c,_P1_2
      000030 E4               [12]  448 	clr	a
      000031 33               [12]  449 	rlc	a
      000032 4D               [12]  450 	orl	a,r5
      000033 FF               [12]  451 	mov	r7,a
                                    452 ;	udpModule.c:30: SCLK = 0;
                                    453 ;	assignBit
      000034 C2 93            [12]  454 	clr	_P1_3
                                    455 ;	udpModule.c:26: for(i = 0; i < 8; i++){
      000036 0E               [12]  456 	inc	r6
      000037 BE 08 00         [24]  457 	cjne	r6,#0x08,00117$
      00003A                        458 00117$:
      00003A 40 EB            [24]  459 	jc	00102$
                                    460 ;	udpModule.c:32: return data;
      00003C 8F 82            [24]  461 	mov	dpl,r7
                                    462 ;	udpModule.c:33: }
      00003E 22               [24]  463 	ret
                                    464 ;------------------------------------------------------------
                                    465 ;Allocation info for local variables in function 'WizNet_init'
                                    466 ;------------------------------------------------------------
                                    467 ;	udpModule.c:35: void WizNet_init(){
                                    468 ;	-----------------------------------------
                                    469 ;	 function WizNet_init
                                    470 ;	-----------------------------------------
      00003F                        471 _WizNet_init:
                                    472 ;	udpModule.c:36: SPI_init();
                                    473 ;	udpModule.c:37: }
      00003F 02r00r00         [24]  474 	ljmp	_SPI_init
                                    475 ;------------------------------------------------------------
                                    476 ;Allocation info for local variables in function 'main'
                                    477 ;------------------------------------------------------------
                                    478 ;	udpModule.c:39: void main(void){
                                    479 ;	-----------------------------------------
                                    480 ;	 function main
                                    481 ;	-----------------------------------------
      000042                        482 _main:
                                    483 ;	udpModule.c:40: WizNet_init();
      000042 12r00r3F         [24]  484 	lcall	_WizNet_init
                                    485 ;	udpModule.c:42: while(1){
      000045                        486 00102$:
                                    487 ;	udpModule.c:45: }
      000045 80 FE            [24]  488 	sjmp	00102$
                                    489 	.area CSEG    (CODE)
                                    490 	.area CONST   (CODE)
                                    491 	.area XINIT   (CODE)
                                    492 	.area CABS    (ABS,CODE)
